require 'rails_helper'

RSpec.describe Mutations::CreateUser, type: :request do
  describe '.resolve' do
    context "with valid attributes" do
      it 'returns a new user' do
        post '/graphql', params: { query: query(username: 'juju', email: 'juju@gmail.com') }
        data = JSON.parse(response.body, symbolize_name: true)
        puts data.inspect

        user = data.dig(:data, :createUser, :user)

        expect(response).to have_http_status(:ok)
        expect(user).to include('name', 'email')
      end
    end

    xcontext "with invalid username" do

    end

    xcontext "with existing email" do

    end

    
    def query(username, email)
      <<~GQL
        mutation {
          createUser(input: {params: {username: "#{username}", email: "#{email}"}}){
            user {
              name
              email
            }
          }
        }
      GQL
    end
  end
end
